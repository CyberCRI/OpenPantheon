name: Code formatting
on:
  push:
    branches:
      - main
      - staging
  pull_request:
    branches:
      - main
jobs:
  frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Git checkout
        uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
          cache: yarn
          cache-dependency-path: frontend/yarn.lock
      - name: Install the dependencies
        working-directory: frontend
        run: yarn install --non-interactive --frozen-lockfile
      - name: Check the code formatting
        working-directory: frontend
        run: yarn format:check

  backend:
    runs-on: ubuntu-latest
    steps:
      - name: Git checkout
        uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.7'
      - uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: pip
          restore-keys: |
            pip
      - name: Install poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry
      - uses: actions/cache@v2
        with:
          path: ~/.cache/pypoetry
          key: poetry-${{ hashFiles('backend/app/poetry.lock') }}
          restore-keys: |
            poetry-
      - name: Install dependencies
        working-directory: backend/app
        run: poetry install --no-root
      - name: Check the code formatting
        working-directory: backend/app
        run: |
          # Activate poetry's virtualenv
          source `poetry env info --path`/bin/activate
          # Run formatting tools
          ./scripts/format.sh
          # Check that there are no changes
          git diff --exit-code
